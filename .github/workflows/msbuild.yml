name: MicaForEveryone

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
    runs-on: windows-latest
    env:
      SOLUTION_FILE_PATH: MicaForEveryone.sln
      RELEASE_DIR: ${{ matrix.configuration }}
      EXE_NAME: MicaForEveryone-x64-${{ matrix.configuration }}.exe
      BEXE_NAME: MicaForEveryone-x64-${{ matrix.configuration }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug - List repository files
      shell: pwsh
      run: Get-ChildItem -Recurse -File

    - name: Install Visual Studio 2019 Build Tools with ATL
      shell: pwsh
      run: |
        choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.v142.x86.x64 --add Microsoft.VisualStudio.Component.VC.ATL --add Microsoft.VisualStudio.Component.Windows10SDK" --yes --no-progress

    - name: Verify Installed Components
      shell: pwsh
      run: |
        & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -products * -requires Microsoft.Component.MSBuild -property installationPath

    - name: Check Installed Include Files
      shell: pwsh
      run: |
        $includePath = "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC"
        Get-ChildItem -Recurse -Path $includePath -Include "atlstr.h", "atl*"

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Verify ATL Headers
      shell: pwsh
      run: |
        $atlPath = "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\14.29.30133\include\atlstr.h"
        if (-Not (Test-Path $atlPath)) {
          Write-Error "ATL headers not found at $atlPath"
          exit 1
        }
        Write-Output "ATL headers found at $atlPath"

    - name: Build (x64)
      working-directory: ${{ github.workspace }}
      run: |
        msbuild /m ` 
                /p:Configuration=${{ matrix.configuration }} ` 
                /p:Platform=x64 ` 
                /p:PlatformToolset=v142 ` 
                /p:OutputPath=bin\x64\${{ matrix.configuration }} ` 
                "${{ env.SOLUTION_FILE_PATH }}"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.EXE_NAME }}
        path: bin\x64\${{ matrix.configuration }}\${{ env.EXE_NAME }}


